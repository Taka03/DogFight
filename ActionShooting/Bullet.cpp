//*============================================================================
//Bullet.cpp
//*============================================================================

//=============================================================================
//include
//=============================================================================
#include "Bullet.h"
#include "ResourceManager.h"

//=============================================================================
//variable
//=============================================================================
int CBullet::m_BulletNum = 0;

//============================================================================
//コンストラクタ
//============================================================================
//[input]
//	pName:ファイル名
//	pDataName:データファイル名
//	vPos:位置
//===========================================================================
CBullet::CBullet( const char *pName, const char *pDataName, Math::Vector2D vPos )
:CCharacter( pName, pDataName )
{
	m_fSpeed = 15.0f;
	
	m_vPos = vPos;
	
	m_eType = CCharacter::TYPE_BULLET;
	
	m_fSize.x = 24;
	m_fSize.y = 24;
	
}

//============================================================================
//デストラクタ
//============================================================================
CBullet::~CBullet(void)
{
}


//============================================================================
//移動
//============================================================================
void CBullet::Move()
{
	m_vPos.x += m_fSpeed;
	
}

//============================================================================
//当たり判定処理
//============================================================================
//[input]
//	spObj:判定するオブジェクト
//============================================================================
void CBullet::HitExec( sp<CGameObject> spObj )
{

}

//============================================================================
//処理
//============================================================================
//void CBullet::Exec()
//{
//	m_pSpr->Begin();
//
//	m_pSpr->End();
//}
//============================================================================
//移動補正
//============================================================================
void CBullet::MoveAdjust()
{
	//画面外にいったら削除
	if( m_vPos.x > SCREEN_WIDTH )
	{
		this->SetRemoveFlag( true );		
	}

}

