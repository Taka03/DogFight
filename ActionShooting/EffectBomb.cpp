//*============================================================================
//EffectBomb.cpp
//*============================================================================

//=============================================================================
//include
//=============================================================================
#include "EffectBomb.h"
#include "Common/Application.h"
#include "SoundManager.h"

//=============================================================================
//variable
//=============================================================================
Uint32 CEffectBomb::m_Cnt = 0;

//============================================================================
//コンストラクタ
//============================================================================
//[input]
//	pName:ファイル名
//	pDataName:データファイル名
//	vPos:位置
//===========================================================================
CEffectBomb::CEffectBomb( const char *pName, const char *pDataName, Math::Vector2D vPos )
:CEffect( pName, pDataName, vPos )
{
	m_Cnt++;
	m_ExistCount = 0;
	m_eType = CCharacter::TYPE_BOMB;
	
	m_vInitPos = vPos;
	
	
}

//============================================================================
//コンストラクタ
//============================================================================
//[input]
//	pName:ファイル名
//	pDataName:データファイル名
//	pObj:オブジェクト
//===========================================================================
CEffectBomb::CEffectBomb( const char *pName, const char *pDataName, CGameObject *pObj )
:CEffect( pName, pDataName, Math::Vector2D( 0, 0 ) )
{
	m_Cnt++;
	m_ExistCount = 0;
	m_pEnemyObj	= pObj;
	m_vPos = m_pEnemyObj->GetPos();
	m_eType = CCharacter::TYPE_BOMB;
}



//============================================================================
//デストラクタ
//============================================================================
CEffectBomb::~CEffectBomb(void)
{
}

//============================================================================
//処理
//============================================================================
void CEffectBomb::Exec()
{
	m_vPos = m_vInitPos - Math::Vector2D( 10, 10 );
	
	if( m_Anim.x == m_DivNum.x - 1 )
	{
		m_eState = STATE_DIED;
	}
	
	CEffect::Exec();
	
}

////============================================================================
////パラメーターの読み込み
////============================================================================
////[input]
////	pFileName:ファイル名
////===========================================================================
//void CEffectBomb::LoadParameter( const char *pFileName )
//{
//	CFileLoader FileLoad( pFileName );
//
//	vector< string > vecStr = CFileLoader::SplitString( FileLoad.GetStrList().at( 0 ), "," );
//
//	//----------------------------------------------
//	//位置の設定
//	//----------------------------------------------
//	SetParameter( m_vInitPos.x, vecStr.at( 0 ) );
//
//	SetParameter( m_vInitPos.y, vecStr.at( 1 ) );
//
//	//----------------------------------------------
//	//角度の設定
//	//----------------------------------------------
//	SetParameter( m_InitAngle, vecStr.at( 2 ) );
//
//	//----------------------------------------------
//	//拡縮率の設定
//	//----------------------------------------------
//	SetParameter( m_fInitScale.x, vecStr.at( 3 ) );
//
//	SetParameter( m_fInitScale.y, vecStr.at( 4 ) );
//
//	//----------------------------------------------
//	//分割数の設定
//	//----------------------------------------------
//	SetParameter( m_DivNum.x, vecStr.at( 5 ) );
//
//	SetParameter( m_DivNum.y, vecStr.at( 6 ) );
//
//	//----------------------------------------------
//	//アニメーションの設定
//	//----------------------------------------------
//	SetParameter( m_IsAnim, vecStr.at( 7 ) );
//
//	SetParameter( m_AnimTime, vecStr.at( 8 ) );
//
//}



//============================================================================
//当たり判定処理
//============================================================================
//[input]
//	spObj:判定するオブジェクト
//============================================================================
void CEffectBomb::HitExec( sp<CGameObject> spObj )
{
	////敵の場合
	//if( spObj->GetType() == CGameObject::TYPE_ENEMY )
	//{
	//	
	//}
}



